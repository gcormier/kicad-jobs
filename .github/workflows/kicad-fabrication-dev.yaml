## Expects
## ./pcb - kicad project, pcb and schematic in here
## ./pcb/kibot.yaml - kibot configuration file

## Outputs - zip
## if tagged matching pattern pcb-v* (eg pcb-v3), will create a release with artifacts

name: "Fabrication"
on:
  workflow_call:

jobs:
  fabrication:
    env:
      BaseFileName: ${{ github.event.repository.name }}
      Timezone: America/Toronto
      OutputFolder: pcb/KiBotOutput
    runs-on: ubuntu-latest
    #container: ghcr.io/inti-cmnb/kicad7_auto:latest

    steps:
      - name: Generate Short SHA Environment Variable
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      # Check out the files
      - uses: actions/checkout@v3

      - name: Update the PCBs with git hash
        #if: github.event_name == 'release' || steps.extract_branch.outputs.branch == env.main_branch
        run: |
          export COMMIT=$(git rev-parse --short HEAD)
          echo "COMMIT = ${COMMIT}"    
          echo "ref: ${{ github.ref }}"
          echo "default: ${{ env.default }}"
          sed -i "s!<<hash>>!${COMMIT}!" pcb/*.kicad_pcb
          

      # Get the current date and time, in the timezone specified above, for use later.
      - name: Get current date and time
        id: date
        run: echo "date=$(TZ='${{ env.Timezone }}' date +'%Y-%m-%d_%H%M')" >> $GITHUB_OUTPUT

      # Get the current date
      - name: Get current date
        id: date_only
        run: echo "date_only=$(TZ='${{ env.Timezone }}' date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      # Actually run KiBot to generate all the files. The KiBot script used is
      # in the .kibot/release.kibot.yaml folder.
      - name: KiBot
        uses: INTI-CMNB/KiBot@v2_k7d
        with:
          config: pcb/kibot.yaml
          dir: ${{ env.OutputFolder }} 
          schema: pcb/${{ env.BaseFileName }}.kicad_sch
          board: pcb/${{ env.BaseFileName }}.kicad_pcb

      - name: KiBot (Render)
        uses: INTI-CMNB/KiBot@v2_k7d
        with:
          config: pcb/kibot-render.yaml
          dir: ${{ env.OutputFolder }} 
          schema: pcb/${{ env.BaseFileName }}.kicad_sch
          board: pcb/${{ env.BaseFileName }}.kicad_pcb

      # Archive all the artifacts from output and attach to the action's results.
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BaseFileName }}-${{ github.ref_name }}-fab-${{ steps.date.outputs.date }}
          path: ${{ env.OutputFolder }}/**

      # Conditional release
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/pcb')
        with:
          files: |
            ${{ env.OutputFolder }}/*.zip
            ${{ env.OutputFolder }}/*.pdf
            ${{ env.OutputFolder }}/*.step
            ${{ env.OutputFolder }}/*.png
        
