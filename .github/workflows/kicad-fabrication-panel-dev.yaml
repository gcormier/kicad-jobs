## Expects
## ./pcb - kicad project, pcb and schematic in here
## ./pcb/kibot-panel.yaml - kibot configuration file for the panel operation
## ./pcb/kibot.yaml - kibot configuration file

name: "Panel Fabrication"
run-name: Panel Fabrication against ${{ github.ref_name }}
on:
  workflow_call:

jobs:
  fabrication:
    env:
      BaseFileName: ${{ github.event.repository.name }}
      Timezone: America/Toronto
      PanelFolder: pcb/panel
    runs-on: ubuntu-latest

    steps:
      # Check out the files
      - uses: actions/checkout@v3

      - name: Generate Short SHA Environment Variable
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      # Generate the panel first
      - name: KiBot (Panel)
        uses: INTI-CMNB/KiBot@v2_dk7
        with:
          config: pcb/kibot-panel.yaml
          dir: ${{ env.PanelFolder }} 
          schema: pcb/${{ env.BaseFileName }}.kicad_sch
          board: pcb/${{ env.BaseFileName }}.kicad_pcb

      # Get the current date and time, in the timezone specified above, for use later.
      - name: Get current date and time
        id: date
        run: echo "date=$(TZ='${{ env.Timezone }}' date +'%Y-%m-%d_%H%M')" >> $GITHUB_OUTPUT

      # Get the current date
      - name: Get current date
        id: date_only
        run: echo "date_only=$(TZ='${{ env.Timezone }}' date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      # Issue in Github Actions
      - name: Fix root permissions
        id: fixpermissions
        run: sudo chown -R 1001:123 ${{ env.PanelFolder }}

      - name: Update the PCBs with git hash
        run: |
          sleep 1
          export COMMIT=$(git rev-parse --short HEAD)
          echo "COMMIT = ${COMMIT}"    
          echo "ref: ${{ github.ref }}"
          echo "ref_name: ${{ github.ref_name }}"
          sed -i "s!<<hash>>!${COMMIT}!" ${{ env.PanelFolder }}/${{ env.BaseFileName }}-panel.kicad_pcb
      
      - name: Remove individual JLC marking
        run: |
          sed -i "s!JLCJLCJLCJLC1! !" ${{ env.PanelFolder }}/${{ env.BaseFileName }}-panel.kicad_pcb
      
      # Generate fab output based on panel
      - name: KiBot
        uses: INTI-CMNB/KiBot@v2_dk7
        with:
          config: pcb/kibot.yaml
          dir: ${{ env.PanelFolder }} 
          schema: pcb/${{ env.BaseFileName }}.kicad_sch
          board: ${{ env.PanelFolder }}/${{ env.BaseFileName }}-panel.kicad_pcb
      
      # Archive all the artifacts from output and attach to the action's results.
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BaseFileName }}-${{ github.ref_name }}-panel-${{ steps.date.outputs.date }}
          path: ${{ env.PanelFolder }}/**
        
